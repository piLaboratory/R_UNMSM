name: '5. Tablas de agregación de datos'
description: |-
    <p>En este ejercicio usaremos el <em>data frame</em> <code>islas</code> que hás creado y trabajado en los ejercícios precedentes.</p>
    <ol type="1">
    <li><p>Inicia tu script R con los códigos que has utilizado para resolver los ejercicios <a href="http://notar.ib.usp.br/exercicio/128">Leyendo Datos</a>, <a href="http://notar.ib.usp.br/exercicio/130">Leyendo Más Datos</a>, <a href="http://notar.ib.usp.br/exercicio/131">Añadir Variables</a> y <a href="http://notar.ib.usp.br/exercicio/132">Variables Categoricas</a>. Con eso tu código para este ejercício debe crear los objetos <code>islas</code> y <code>archipielagos</code> en tu espacio de trabajo. (En este ejercício necesitas solamente del objeto <code>islas</code>, pero mantenga los <em>scripts</em> de todos los ejercícios en su código).</p></li>
    <li><p>Aplica la funcción <code>aggregate</code> en el objeto <code>islas</code> para hacer un <em>data frame</em> con las médias de los logaritmos de las areas de las islas por tipo de isla (variable <code>island.type</code>) y por región biogeografica (variable <code>biogeo.realm</code>). Assigne el resultado a un objeto com el nombre <code>islas.mean.area.log</code>.</p></li>
    <li><p>Aplica la funcción <code>table</code> en la variable <code>study.id</code> del objeto <code>islas</code> para hacer una tabla con el número de observaciones (islas) por sítio de estudio. Assigne el resultado a un objeto con el nombre <code>islas.N</code>.</p></li>
    <li><p>Convierta el objeto <code>islas.N</code> para la classe <code>data.frame</code>.</p></li>
    <li><p>Cambie los nombres de las dos variables del objeto <code>islas.N</code> para <code>study.id</code> y <code>n.muestra</code>.</p></li>
    </ol>
    <h5 id="ni-idea-de-por-qué-recibes-mensajes-de-error">¿Ni idea de por qué recibes mensajes de error?</h5>
    <p>Quizás le ayude descargar <a href="https://github.com/piLaboratory/R_UNMSM/raw/refs/heads/master/notaR/5_agregacion_islas_mean.rds">ese fichero</a> y <a href="https://github.com/piLaboratory/R_UNMSM/raw/refs/heads/master/notaR/5_agregacion_islas_N.rds">ese fichero</a> en su espacio de trabajo y leerlos con los comandos:</p>
    <p><code>ej5a  &lt;-  readRDS( "5_agregacion_islas_mean.rds")</code></p>
    <p><code>ej5b  &lt;-  readRDS( "5_agregacion_islas_N.rds")</code></p>
    <p>Los objetos <code>ej5a</code> y <code>ej5b</code> tendrán los <em>data frame</em> tal cual esperados por este ejercício. Puedes compararlos con los objetos que creaste en tu código, con la función <code>identical</code>.</p>
    <p>Pero atención: no incluyas eses comandos en su <em>script</em> de respuesta a este ejercício.</p>
precondicoes: |-
    ## Precondicoes
    ## Ejercicio 1
    ilhas.raw <- read.csv("islas.csv")
    ilhas.nombres <- names(ilhas.raw)
    ilhas.nombres <- gsub("_", ".", tolower(ilhas.nombres), fixed = TRUE)
    ilhas <- ilhas.raw
    names(ilhas) <- ilhas.nombres
    ## Ejercicio 2
    arquip.raw <- read.csv("archipielagos.csv")
    arquip.nombres <- names(arquip.raw)
    arquip.nombres <- gsub("_", ".", tolower(arquip.nombres), fixed = TRUE)
    arquip <- arquip.raw
    names(arquip) <- arquip.nombres
    ##Ejercicio 3
    ilhas$island.area.log<- log(ilhas$island.area)
    ilhas$species.richness.log <- log(ilhas$species.richness)
    ## Ejercicio 4
    ilhas$sar.type <- factor(ilhas$sar.type)
    ilhas$island.type <- factor(ilhas$island.type, levels = c("Oceanic", "Continental", "Habitat-Patches"))
    arquip$sar.type <- factor(arquip$sar.type)
    arquip$ecoregion <- factor(arquip$ecoregion)
    arquip$island.type <- factor(arquip$island.type,
                                        levels = c("Oceanic", "Continental", "Mainland Island"),
                                        labels = c("Oceanic", "Continental", "Habitat-Patches"))
    ## Ejercicio 5
    ilhas.mean.area.log <- aggregate( island.area.log ~ island.type + biogeo.realm, FUN = mean, data = ilhas )
topico_id: 12
testes:
    - { condicao: 'exists("islas")', dica: 'No hay un objeto <code>islas</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/128"> ejercício 1</a> en tu código?', peso: 0.0 }
    - { condicao: 'exists("archipielagos")', dica: 'No hay un objeto <code>archipielagos</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/130">ejercício 2</a> en tu código?', peso: 0.0 }
    - { condicao: 'identical(islas, ilhas)', dica: 'El objeto <code>islas</code> no és exactamente el esperado. ¿Has incluido la solución de los ejercício 1 a 4 en tu código?', peso: 0.0 }
    - { condicao: 'identical(archipielagos, arquip)', dica: 'El objeto <code>archipielagos</code> no és exactamente el esperado. ¿Has incluido la solución de los ejercício 1 a 4 en tu código?', peso: 0.0 }
    - { condicao: 'exists("islas.mean.area.log")', dica: 'No hay un  objeto <code>islas.mean.area.log</code>.', peso: 1.0 }
    - { condicao: 'identical(islas.mean.area.log, ilhas.mean.area.log)', dica: 'El objeto <code>islas.mean.area.log</code> no és exactamente el esperado. Utiliza la sintaxis de formula de la funcción <code>aggregate</code>.', peso: 1.0 }
    - { condicao: 'exists("islas.N")', dica: 'No hay un objeto <code>islas.N</code>.', peso: 1.0 }
    - { condicao: is.data.frame(islas.N), dica: 'El objeto <code>islas.N</code> no es de la classe `dataframe`', peso: 1.0 }
    - { condicao: 'identical(names(ilhas.N), names(islas.N))', dica: 'Los nombres de las variables del objeto <code>islas.N</code> no son los esperados.', peso: 1.0 }
    - { condicao: 'identical(islas.N, ilhas.N)', dica: 'El objeto <code>islas.N</code> no es exactamente lo esperado.', peso: 1.0 }
