name: '4. Variables Categoricas (Factores)'
description: |-
    <p>En este ejercicio convertiremos en factores variables de los <em>data frame</em> <code>islas</code> y <code>archipelagos</code> que hás creado en los ejercícios 1, 2 y 3.</p>
    <ol type="1">
    <li><p>Inicia tu script R con los código que has utilizado para resolver los ejercicios <a href="http://notar.ib.usp.br/exercicio/128">Leyendo Datos</a>, <a href="http://notar.ib.usp.br/exercicio/130">Leyendo Más Datos</a> y <a href="http://notar.ib.usp.br/exercicio/131">Añadir Variables</a>.  Con eso tu código para este ejercício debe crear los objeto <code>islas</code> y <code>archipielagos</code> en tu espacio de trabajo.</p></li>
    <li><p>Convierte la variable <code>sar.type</code> del objeto <code>islas</code> en un factor.</p></li>
    <li><p>Convierte la variable <code>island.type</code> del objeto <code>islas</code> en un factor. Los niveles dese factor devem ser <code>Oceanic</code>, <code>Continental</code>, <code>Habitat-Patches</code>, en este orden. Tenga en cuenta que deberá utilizar el argumento <code>levels</code> de la función <code>factor</code> para  reordenar los niveles.</p></li>
    <li><p>Convierte la variable <code>sar.type</code> del objeto <code>archipielagos</code> en un factor.</p></li>
    <li><p>Convierte la variable <code>ecoregion</code> del objeto <code>archipielagos</code> en un factor.</p></li>
    <li><p>Convierte la variable <code>island.type</code> del objeto <code>archipielagos</code> en un factor. Los niveles dese factor devem ser <code>Oceanic</code>, <code>Continental</code>, <code>Habitat-Patches</code>, en este orden. Tenga en cuenta que deberá utilizar el argumento <code>labels</code> de la función <code>factor</code> para renombrar los niveles y el argumento <code>levels</code> para reordenar los niveles.</p></li>
    </ol>
    <h5 id="ni-idea-de-por-qué-recibes-mensajes-de-error">¿Ni idea de por qué recibes mensajes de error?</h5>
    <p>Quizás le ayude descargar <a href="https://github.com/piLaboratory/R_UNMSM/raw/refs/heads/master/notaR/4_variables_categoricas_islas.rds">ese fichero</a> y <a href="https://github.com/piLaboratory/R_UNMSM/raw/refs/heads/master/notaR/4_variables_categoricas_archipielagos.rds">ese fichero</a> en su espacio de trabajo y leerlos con los comandos:</p>
    <p><code>ej4a  &lt;-  readRDS( "4_variables_categoricas_islas.rds")</code></p>
    <p><code>ej4b  &lt;-  readRDS( "4_variables_categoricas_archipielagos.rds")</code></p>
    <p>Los objetos <code>ej4a</code> y <code>ej4b</code> tendrán los <em>data frame</em> tal cual esperados por este ejercício. Puedes compararlos con los <em>data frame</em> que creaste en tu código, con la
    función <code>identical</code>.</p>
    <p>Pero atención: no incluyas eses comandos en su <em>script</em> de respuesta a este ejercício.</p>
precondicoes: |-
    ## Ejercicio 1
    ilhas.raw <- read.csv("islas.csv")
    ilhas.nombres <- names(ilhas.raw)
    ilhas.nombres <- gsub("_", ".", tolower(ilhas.nombres), fixed = TRUE)
    ilhas <- ilhas.raw
    names(ilhas) <- ilhas.nombres
    ## Ejercicio 2
    arquip.raw <- read.csv("archipielagos.csv")
    arquip.nombres <- names(arquip.raw)
    arquip.nombres <- gsub("_", ".", tolower(arquip.nombres), fixed = TRUE)
    arquip <- arquip.raw
    names(arquip) <- arquip.nombres
    ##Ejercicio 3
    ilhas$island.area.log<- log(ilhas$island.area)
    ilhas$species.richness.log <- log(ilhas$species.richness)
    ## Ejercicio 4
    ilhas$sar.type <- factor(ilhas$sar.type)
    ilhas$island.type <- factor(ilhas$island.type, levels = c("Oceanic", "Continental", "Habitat-Patches"))
    arquip$sar.type <- factor(arquip$sar.type)
    arquip$ecoregion <- factor(arquip$ecoregion)
    arquip$island.type <- factor(arquip$island.type,
                                        levels = c("Oceanic", "Continental", "Mainland Island"),
                                        labels = c("Oceanic", "Continental", "Habitat-Patches"))
topico_id: 12
testes:
    - { condicao: 'exists("islas")', dica: 'No hay un objeto <code>islas</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/128"> ejercício 1</a> en tu código?', peso: 0.0 }
    - { condicao: 'exists("archipielagos")', dica: 'No hay un objeto <code>archipielagos</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/130">ejercício 2</a> en tu código?', peso: 0.0 }
    - { condicao: is.data.frame(islas), dica: 'El objeto <code>islas</code> no es un <em>data frame</em>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/128">ejercício 1</a> en tu código?', peso: 0.0 }
    - { condicao: is.data.frame(archipielagos), dica: 'El objeto <code>archipielagos</code> no es un <em>data frame</em>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/130">ejercício 2</a> en tu código?', peso: 0.0 }
    - { condicao: 'any("island.area.log" %in% names(islas))', dica: 'No hay una variable de nombre <code>island.area.log</code> en el objeto <code>islas</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/131">ejercício 3</a> en tu código?', peso: 0.0 }
    - { condicao: 'any("species.richness.log" %in% names(islas))', dica: 'No hay una variable de nombre <code>species.richness.log</code> en el objeto <code>islas</code>. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/131">ejercício 3</a> en tu código?', peso: 0.0 }
    - { condicao: 'identical(islas$island.area.log, ilhas$island.area.log)', dica: 'La variable <code>island.area.log</code> del objeto <code>islas</code> no tiene los valores esperados. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/131">ejercício 3</a> en tu código?', peso: 0.0 }
    - { condicao: 'identical(islas$species.richness.log, ilhas$species.richness.log)', dica: 'La variable <code>species.richness.log</code> del objeto <code>islas</code> no tiene los valores esperados. ¿Has incluido la solución del <a href="http://notar.ib.usp.br/exercicio/131">ejercício 3</a> en tu código?', peso: 0.0 }
    - { condicao: is.factor(islas$sar.type), dica: 'La variable <code>sar.type</code> del objeto <code>islas</code> no es de clase <code>factor</code>.', peso: 1.0 }
    - { condicao: 'identical(ilhas$sar.type, islas$sar.type)', dica: 'La variable <code>sar.type</code> del objeto <code>islas</code> no es exactamente lo que se espera.', peso: 1.0 }
    - { condicao: is.factor(islas$island.type), dica: 'La variable <code>island.type</code> del objeto <code>islas</code> no es de clase <code>factor</code>.', peso: 1.0 }
    - { condicao: 'identical(levels(islas$island.type), levels(ilhas$island.type))', dica: 'La variable <code>island.type</code> del objeto <code>islas</code> no tiene los niveles esperados. Verifica los niveles con la función <code>levels</code>.', peso: 1.0 }
    - { condicao: 'identical(ilhas$island.type, islas$island.type)', dica: 'La variable <code>island.type</code> del objeto <code>islas</code> no es exactamente lo que se espera.', peso: 1.0 }
    - { condicao: is.factor(archipielagos$sar.type), dica: 'La variable <code>sar.type</code> del objeto <code>archipielagos</code> no es de clase <code>factor</code>.', peso: 1.0 }
    - { condicao: 'identical(arquip$sar.type, archipielagos$sar.type)', dica: 'La variable <code>sar.type</code> del objeto <code>archipielagos</code> no es exactamente lo que se espera.', peso: 1.0 }
    - { condicao: is.factor(archipielagos$ecoregion), dica: 'La variable <code>ecoregion</code> del objeto <code>archipielagos</code> no es de clase <code>factor</code>.', peso: 1.0 }
    - { condicao: 'identical(arquip$ecoregion, archipielagos$ecoregion)', dica: 'La variable <code>ecoregion</code> del objeto <code>archipielagos</code> no es exactamente lo que se espera.', peso: 1.0 }
    - { condicao: is.factor(archipielagos$island.type), dica: 'La variable <code>island.type</code> del objeto <code>archipielagos</code> no es de clase <code>factor</code>.', peso: 1.0 }
    - { condicao: 'identical(levels(archipielagos$island.type), levels(arquip$island.type))', dica: 'La variable <code>island.type</code> del objeto <code>archipielagos</code> no tiene los niveles esperados. Verifica los niveles con la función <code>levels</code>.', peso: 1.0 }
    - { condicao: 'identical(arquip$island.type, archipielagos$island.type)', dica: 'La variable <code>island.type</code> del objeto <code>archipielagos</code> no es exactamente lo que se espera.', peso: 1.0 }
